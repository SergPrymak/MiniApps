// –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
const SYSTEM_EFFICIENCY = 0.75; // –ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∏ (75%)
const PDV = 0.195; // –ü–æ–¥–∞—Ç–æ–∫ –Ω–∞ –¥–æ–¥–∞–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å (19.5%)
const GREEN_TARIFF = 0.16; // –ó–µ–ª–µ–Ω–∏–π —Ç–∞—Ä–∏—Ñ (—î–≤—Ä–æ –∑–∞ –∫–í—Ç¬∑–≥–æ–¥)
const DOMESTIC_PRICE = 2.64; // –í–∞—Ä—Ç—ñ—Å—Ç—å –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó –¥–ª—è –¥–æ–º–æ–≥–æ—Å–ø–æ–¥–∞—Ä—Å—Ç–≤ (–≥—Ä–Ω –∑–∞ –∫–í—Ç¬∑–≥–æ–¥)

// –ù–∞–∑–≤–∏ –º—ñ—Å—è—Ü—ñ–≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
const MONTHS_UA = [
    '–°—ñ—á–µ–Ω—å', '–õ—é—Ç–∏–π', '–ë–µ—Ä–µ–∑–µ–Ω—å', '–ö–≤—ñ—Ç–µ–Ω—å', '–¢—Ä–∞–≤–µ–Ω—å', '–ß–µ—Ä–≤–µ–Ω—å', 
    '–õ–∏–ø–µ–Ω—å', '–°–µ—Ä–ø–µ–Ω—å', '–í–µ—Ä–µ—Å–µ–Ω—å', '–ñ–æ–≤—Ç–µ–Ω—å', '–õ–∏—Å—Ç–æ–ø–∞–¥', '–ì—Ä—É–¥–µ–Ω—å'
];

// –ù–∞–∑–≤–∏ —Ä–µ–≥—ñ–æ–Ω—ñ–≤
const REGION_NAMES = {
    'vinn': '–í—ñ–Ω–Ω–∏—Ü—è', 'dnip': '–î–Ω—ñ–ø—Ä–æ', 'done': '–î–æ–Ω–µ—Ü—å–∫', 'zhyto': '–ñ–∏—Ç–æ–º–∏—Ä',
    'zapor': '–ó–∞–ø–æ—Ä—ñ–∂–∂—è', 'ifra': '–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫', 'kyiv': '–ö–∏—ó–≤', 'krop': '–ö—Ä–æ–ø–∏–≤–Ω–∏—Ü—å–∫–∏–π',
    'lutsk': '–õ—É—Ü—å–∫', 'luhan': '–õ—É–≥–∞–Ω—Å—å–∫', 'lviv': '–õ—å–≤—ñ–≤', 'myko': '–ú–∏–∫–æ–ª–∞—ó–≤',
    'odes': '–û–¥–µ—Å–∞', 'polt': '–ü–æ–ª—Ç–∞–≤–∞', 'rivn': '–†—ñ–≤–Ω–µ', 'sumy': '–°—É–º–∏',
    'symf': '–°—ñ–º—Ñ–µ—Ä–æ–ø–æ–ª—å', 'tern': '–¢–µ—Ä–Ω–æ–ø—ñ–ª—å', 'uzho': '–£–∂–≥–æ—Ä–æ–¥', 'khark': '–•–∞—Ä–∫—ñ–≤',
    'kher': '–•–µ—Ä—Å–æ–Ω', 'kmel': '–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π', 'cher': '–ß–µ—Ä–∫–∞—Å–∏', 'chrn': '–ß–µ—Ä–Ω—ñ–≥—ñ–≤',
    'chrv': '–ß–µ—Ä–Ω—ñ–≤—Ü—ñ'
};

// –î–∞–Ω—ñ —ñ–Ω—Å–æ–ª—è—Ü—ñ—ó –¥–ª—è —Ä–µ–≥—ñ–æ–Ω—ñ–≤ (–∫–í—Ç¬∑–≥–æ–¥/–º¬≤/–¥–µ–Ω—å)
const INSOLATION_DATA = {
    'vinn': [1.07, 1.89, 2.94, 3.92, 5.19, 5.3, 5.16, 4.68, 3.21, 1.97, 1.10, 0.9],
    'dnip': [1.15, 1.91, 2.94, 4.04, 5.19, 5.32, 5.38, 4.67, 3.31, 2.11, 1.15, 0.91],
    'done': [1.21, 1.99, 2.98, 4.05, 5.25, 5.42, 5.34, 4.68, 3.36, 2.13, 1.17, 0.96],
    'zhyto': [1.01, 1.82, 2.87, 3.88, 5.16, 5.19, 5.04, 4.66, 3.06, 1.87, 1.04, 0.83],
    'zapor': [1.21, 2.00, 2.98, 4.05, 5.26, 5.42, 5.34, 4.67, 3.36, 2.13, 1.17, 0.96],
    'ifra': [1.19, 1.93, 2.84, 3.68, 4.54, 4.75, 4.76, 4.4, 3.06, 2.00, 1.20, 0.94],
    'kyiv': [1.07, 1.87, 2.95, 3.96, 5.25, 5.22, 5.25, 4.67, 3.12, 1.94, 1.02, 0.86],
    'krop': [1.20, 1.95, 2.96, 4.07, 5.47, 5.49, 5.57, 4.92, 3.42, 2.11, 1.15, 0.96],
    'lutsk': [1.01, 1.77, 2.83, 3.91, 5.05, 5.11, 4.97, 4.67, 3.05, 1.83, 1.05, 0.79],
    'luhan': [1.23, 2.06, 3.05, 4.05, 5.46, 5.57, 5.65, 4.99, 3.62, 2.23, 1.26, 0.93],
    'lviv': [1.08, 1.83, 2.82, 3.78, 4.67, 4.83, 4.83, 4.45, 3.00, 1.85, 1.06, 0.83],
    'myko': [1.25, 2.10, 3.07, 4.38, 5.65, 5.85, 6.03, 5.34, 3.93, 2.52, 1.36, 1.04],
    'odes': [1.25, 2.11, 3.08, 4.38, 5.65, 5.85, 6.04, 5.33, 3.93, 2.52, 1.36, 1.04],
    'polt': [1.18, 1.96, 2.99, 4.00, 5.40, 5.44, 5.51, 4.87, 3.42, 2.11, 1.15, 0.91],
    'rivn': [1.03, 1.83, 2.84, 3.88, 5.04, 5.17, 5.00, 4.70, 3.01, 1.86, 1.04, 0.81],
    'sumy': [1.13, 1.93, 2.94, 3.99, 5.25, 5.31, 5.37, 4.72, 3.27, 2.02, 1.08, 0.86],
    'symf': [1.27, 2.08, 3.01, 4.19, 5.44, 5.65, 5.88, 5.18, 4.01, 2.55, 1.43, 1.06],
    'tern': [1.09, 1.86, 2.85, 3.85, 4.84, 5.00, 4.93, 4.51, 3.08, 1.91, 1.09, 0.85],
    'uzho': [1.13, 1.91, 2.84, 3.74, 4.56, 4.75, 4.76, 4.4, 3.05, 1.96, 1.19, 0.88],
    'khark': [1.19, 2.02, 3.05, 4.05, 5.46, 5.57, 5.65, 4.99, 3.62, 2.23, 1.26, 0.95],
    'kher': [1.23, 2.06, 3.08, 4.36, 5.68, 5.76, 6.00, 5.29, 4.00, 2.57, 1.36, 1.04],
    'kmel': [1.09, 1.86, 2.85, 3.85, 4.84, 4.99, 4.92, 4.50, 3.08, 1.91, 1.09, 0.85],
    'cher': [1.15, 1.91, 2.94, 3.99, 5.21, 5.30, 5.25, 4.70, 3.28, 2.06, 1.13, 0.9],
    'chrn': [1.09, 1.89, 2.94, 3.92, 5.19, 5.30, 5.15, 4.68, 3.21, 1.97, 1.09, 0.9],
    'chrv': [1.19, 1.93, 2.84, 3.68, 4.54, 4.75, 4.76, 4.4, 3.06, 2.00, 1.19, 0.94]
};

// –ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ —É –º—ñ—Å—è—Ü—è—Ö
const DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

// –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–µ–ª
function formatNumber(number, decimals = 0) {
    return number.toFixed(decimals).replace(/\B(?=(\d{3})+(?!\d))/g, " ");
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', function() {
    // –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –≤–∏–ø–∞–¥–∞—é—á–æ–≥–æ —Å–ø–∏—Å–∫—É —Ä–µ–≥—ñ–æ–Ω—ñ–≤
    const regionSelect = document.getElementById('region');
    
    for (const region in REGION_NAMES) {
        const option = document.createElement('option');
        option.value = region;
        option.textContent = REGION_NAMES[region];
        regionSelect.appendChild(option);
    }
    
    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –¥–ª—è —Ñ–æ—Ä–º–∏
    document.getElementById('solarGenWizardForm').addEventListener('submit', calculateSolar);
});

// –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
function calculateSolar(event) {
    event.preventDefault();
    
    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å –∑ —Ñ–æ—Ä–º–∏
    const region = document.getElementById('region').value;
    const panelPower = parseFloat(document.getElementById('panelPower').value);
    const ownConsumption = parseFloat(document.getElementById('ownConsumption').value) || 0;
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    if (!region || !panelPower || panelPower <= 0) {
        alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏.');
        return;
    }
    
    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–Ω—Å–æ–ª—è—Ü—ñ—ó –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ —Ä–µ–≥—ñ–æ–Ω—É
    const monthlyInsolation = INSOLATION_DATA[region];
    
    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø–æ –º—ñ—Å—è—Ü—è—Ö
    const monthlyGeneration = [];
    for (let i = 0; i < 12; i++) {
        const gen = monthlyInsolation[i] * panelPower * DAYS_IN_MONTH[i] * SYSTEM_EFFICIENCY;
        monthlyGeneration.push(gen);
    }
    
    // –ó–∞–≥–∞–ª—å–Ω–∞ —Ä—ñ—á–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è
    const totalGeneration = monthlyGeneration.reduce((sum, gen) => sum + gen, 0);
    
    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–∏–±—É—Ç–∫—É –∑–∞ –∑–µ–ª–µ–Ω–∏–º —Ç–∞—Ä–∏—Ñ–æ–º
    const profit = totalGeneration * GREEN_TARIFF;
    
    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤–ª–∞—Å–Ω–æ–≥–æ —Å–ø–æ–∂–∏–≤–∞–Ω–Ω—è —Ç–∞ –µ–∫–æ–Ω–æ–º—ñ—ó
    let ownMonthly = [];
    let gridMonthly = [];
    let remainingMonthly = [];
    let usedForOwnTotal = 0;
    let gridTotal = 0;
    
    if (ownConsumption > 0) {
        for (let i = 0; i < 12; i++) {
            const ownNeed = ownConsumption;
            const solarGen = monthlyGeneration[i];
            const usedFromSolar = Math.min(solarGen, ownNeed);
            const takenFromGrid = Math.max(0, ownNeed - solarGen);
            const remaining = Math.max(0, solarGen - usedFromSolar);
            
            ownMonthly.push(usedFromSolar);
            gridMonthly.push(takenFromGrid);
            remainingMonthly.push(remaining);
            
            usedForOwnTotal += usedFromSolar;
            gridTotal += takenFromGrid;
        }
    }
    
    // –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    let resultHTML = `
        <h1>–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É:</h1>
        <p>üåç <strong>–†–µ–≥—ñ–æ–Ω:</strong> ${REGION_NAMES[region]}</p>
        <p>‚ö° <strong>–ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å –°–ï–°:</strong> ${panelPower} –∫–í—Ç</p>
        <p>üîã <strong>–†—ñ—á–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è:</strong> ${formatNumber(totalGeneration)} –∫–í—Ç¬∑–≥–æ–¥</p>
    `;
    
    if (ownConsumption > 0) {
        // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è –≤–ª–∞—Å–Ω–æ–≥–æ —Å–ø–æ–∂–∏–≤–∞–Ω–Ω—è
        const annualConsumption = ownConsumption * 12;
        const coveragePercent = (annualConsumption > 0) ? (usedForOwnTotal / annualConsumption) * 100 : 0;
        const savingsUAH = usedForOwnTotal * DOMESTIC_PRICE;
        const remainingForSale = Math.max(0, totalGeneration - usedForOwnTotal);
        const remainingProfit = remainingForSale * GREEN_TARIFF * (1 - PDV);
        
        resultHTML += `
            <h3>üè† –ê–Ω–∞–ª—ñ–∑ —Å–ø–æ–∂–∏–≤–∞–Ω–Ω—è:</h1>
            <p>‚Ä¢ ‚òÄÔ∏è <strong>–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ —Å–æ–Ω—è—á–Ω–æ—ó –µ–Ω–µ—Ä–≥—ñ—ó:</strong> ${formatNumber(usedForOwnTotal)} –∫–í—Ç¬∑–≥–æ–¥ (${coveragePercent.toFixed(1)}% –ø–æ—Ç—Ä–µ–±)</p>
            <p>‚Ä¢ ‚ö° <strong>–ï–Ω–µ—Ä–≥—ñ—ó –∑ –º–µ—Ä–µ–∂—ñ:</strong> ${formatNumber(gridTotal)} –∫–í—Ç¬∑–≥–æ–¥</p>
            <p>‚Ä¢ üí∞ <strong>–ï–∫–æ–Ω–æ–º—ñ—è:</strong> ${formatNumber(usedForOwnTotal)} –∫–í—Ç¬∑–≥–æ–¥ (‚âà ${formatNumber(savingsUAH)} –≥—Ä–Ω –¥–ª—è –¥–æ–º–æ–≥–æ—Å–ø–æ–¥–∞—Ä—Å—Ç–≤)</p>
            <p>‚Ä¢ üü¢ <strong>–ù–∞–¥–ª–∏—à–æ–∫ –¥–ª—è –ø—Ä–æ–¥–∞–∂—É:</strong> ${formatNumber(remainingForSale)} –∫–í—Ç¬∑–≥–æ–¥</p>
            <p>‚Ä¢ üíµ <strong>–î–æ—Ö—ñ–¥ (–ø—ñ—Å–ª—è –ø–æ–¥–∞—Ç–∫—ñ–≤):</strong> ${formatNumber(remainingProfit, 2)} ‚Ç¨</p>
        `;
    } else {
        // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ª–∏—à–µ –ø—Ä–∏–±—É—Ç–∫—É
        const profitAfterPDV = profit * (1 - PDV);
        resultHTML += `
            <p>üíµ <strong>–î–æ—Ö—ñ–¥ (–ø—ñ—Å–ª—è –ø–æ–¥–∞—Ç–∫—ñ–≤):</strong> ${formatNumber(profitAfterPDV, 2)} ‚Ç¨</p>
        `;
    }
    
    // –î–æ–¥–∞–≤–∞–Ω–Ω—è —â–æ–º—ñ—Å—è—á–Ω–∏—Ö –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤
    resultHTML += `<h1>üìÖ –ú—ñ—Å—è—á–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏:</h1><div class="monthly-data">`;
    
    for (let i = 0; i < 12; i++) {
        resultHTML += `<div class="month-row">`;
        resultHTML += `<span class="month-name">${MONTHS_UA[i].slice(0, 3)}:</span>`;
        resultHTML += `<span class="generation">‚òÄÔ∏è ${formatNumber(monthlyGeneration[i])}</span>`;
        
        if (ownConsumption > 0) {
            resultHTML += `<span class="own-use">üè† ${formatNumber(ownMonthly[i])}</span>`;
            resultHTML += `<span class="grid-use">‚ö° ${formatNumber(gridMonthly[i])}</span>`;
            resultHTML += `<span class="remaining">üü¢ ${formatNumber(remainingMonthly[i])}</span>`;
        }
        
        resultHTML += `</div>`;
    }
    
    resultHTML += `</div>`;
    
    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    const resultContent = document.getElementById('resultContent');
    resultContent.innerHTML = resultHTML;
    
    // –ü–æ–∫–∞–∑ –±–ª–æ–∫—É –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    document.getElementById('resultBox').style.display = 'block';
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    document.getElementById('resultBox').scrollIntoView({ behavior: 'smooth' });
}
