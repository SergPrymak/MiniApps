document.addEventListener('DOMContentLoaded', function() {
    // –ó–º—ñ–Ω–Ω—ñ –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤
    let calculationMode = 'hdd'; // 'hdd' or 'days'
    
    // –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –º—ñ–∂ —Ä–µ–∂–∏–º–∞–º–∏
    document.getElementById('calc-hdd').addEventListener('click', function() {
        setCalculationMode('hdd');
    });
    
    document.getElementById('calc-days').addEventListener('click', function() {
        setCalculationMode('days');
    });
    
    // –î–æ–¥–∞–≤–∞–Ω–Ω—è/–≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–∞–º–µ—Ä
    document.getElementById('add-camera').addEventListener('click', addCameraInput);
    
    // –ü–æ—á–∞—Ç–∫–æ–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–∞–º–µ—Ä
    updateRemoveCameraHandlers();
    
    // –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
    document.getElementById('calculate').addEventListener('click', calculate);
    
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—É–º–∞—Ä–Ω–æ–≥–æ –±—ñ—Ç—Ä–µ–π—Ç—É –ø—Ä–∏ –∑–º—ñ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
    document.getElementById('camera-container').addEventListener('input', updateTotalBitrate);
    
    // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Ä–µ–∂–∏–º—É
    function setCalculationMode(mode) {
        calculationMode = mode;
        
        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
        document.getElementById('calc-hdd').classList.toggle('active', mode === 'hdd');
        document.getElementById('calc-days').classList.toggle('active', mode === 'days');
        
        // –ü–æ–∫–∞–∑/–ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∏
        document.getElementById('calc-hdd-form').style.display = mode === 'hdd' ? 'block' : 'none';
        document.getElementById('calc-days-form').style.display = mode === 'days' ? 'block' : 'none';
        
        // –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
        document.getElementById('result').style.display = 'none';
    }
    
    // –§—É–Ω–∫—Ü—ñ—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó –≥—Ä—É–ø–∏ –∫–∞–º–µ—Ä
    function addCameraInput() {
        const container = document.getElementById('camera-container');
        const newInput = document.createElement('div');
        newInput.className = 'camera-input';
        newInput.innerHTML = `
            <input type="number" class="camera-count" min="1" placeholder="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞–º–µ—Ä">
            <input type="number" class="camera-bitrate" min="1" placeholder="–ë—ñ—Ç—Ä–µ–π—Ç (Kbps)">
            <button class="remove-camera">√ó</button>
        `;
        container.appendChild(newInput);
        updateRemoveCameraHandlers();
    }
    
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    function updateRemoveCameraHandlers() {
        document.querySelectorAll('.remove-camera').forEach(button => {
            button.onclick = function() {
                const cameraInputs = document.querySelectorAll('.camera-input');
                if (cameraInputs.length > 1) {
                    this.parentElement.remove();
                    updateTotalBitrate();
                }
            };
        });
    }
    
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—É–º–∞—Ä–Ω–æ–≥–æ –±—ñ—Ç—Ä–µ–π—Ç—É
    function updateTotalBitrate() {
        const cameraInputs = document.querySelectorAll('.camera-input');
        let totalBitrate = 0;
        
        cameraInputs.forEach(input => {
            const count = parseInt(input.querySelector('.camera-count').value) || 0;
            const bitrate = parseInt(input.querySelector('.camera-bitrate').value) || 0;
            totalBitrate += count * bitrate;
        });
        
        document.getElementById('bitrate-total').textContent = `–°—É–º–∞—Ä–Ω–∏–π –±—ñ—Ç—Ä–µ–π—Ç: ${totalBitrate} Kbps`;
    }
    
    // –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
    function calculate() {
        try {
            // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –∫–∞–º–µ—Ä
            const cameraData = parseCameraData();
            
            if (cameraData.totalCameras === 0) {
                throw new Error("–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ –∫–∞–º–µ—Ä–∏ –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É");
            }
            
            let result = '';
            
            if (calculationMode === 'hdd') {
                // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ HDD
                const days = parseInt(document.getElementById('days').value);
                if (!days || days <= 0) {
                    throw new Error("–í–∫–∞–∂—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤");
                }
                
                const totalBits = cameraData.totalBitrate * days * 24 * 60 * 60;
                const totalTB = totalBits / 8 / 1024 / 1024 / 1024;
                
                result = `
                    <h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É</h3>
                    <p><strong>–î–Ω—ñ –∞—Ä—Ö—ñ–≤—É:</strong> ${days}</p>
                    <p><strong>–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞–º–µ—Ä:</strong> ${cameraData.totalCameras}</p>
                    <p><strong>–°—É–º–∞—Ä–Ω–∏–π –±—ñ—Ç—Ä–µ–π—Ç:</strong> ${cameraData.totalBitrate} Kbps</p>
                    <p><strong>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–π –æ–±—Å—è–≥ HDD:</strong> ${totalTB.toFixed(2)} TB</p>
                    <div class="help-text">–ü—Ä–∏–º—ñ—Ç–∫–∞: –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –¥–æ–¥–∞—Ç–∏ 10-15% –∑–∞–ø–∞—Å—É –¥–ª—è —Å–ª—É–∂–±–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö —Ç–∞ –∑–∞–ø–∞—Å—É</div>
                `;
            } else {
                // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–Ω—ñ–≤
                const hddTB = parseFloat(document.getElementById('hdd-size').value);
                if (!hddTB || hddTB <= 0) {
                    throw new Error("–í–∫–∞–∂—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –æ–±—Å—è–≥ HDD");
                }
                
                const totalBitsPerSecond = cameraData.totalBitrate * 1024;
                const hddBits = hddTB * 8 * 1024 * 1024 * 1024 * 1024;
                const totalDays = hddBits / (totalBitsPerSecond * 24 * 60 * 60) * 0.909;
                
                result = `
                    <h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É</h3>
                    <p><strong>–û–±—Å—è–≥ HDD:</strong> ${hddTB} TB</p>
                    <p><strong>–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞–º–µ—Ä:</strong> ${cameraData.totalCameras}</p>
                    <p><strong>–°—É–º–∞—Ä–Ω–∏–π –±—ñ—Ç—Ä–µ–π—Ç:</strong> ${cameraData.totalBitrate} Kbps</p>
                    <p><strong>–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –∑–∞–ø–∏—Å—É:</strong> ${totalDays.toFixed(1)} –¥–Ω—ñ–≤</p>
                    <div class="help-text">–ü—Ä–∏–º—ñ—Ç–∫–∞: –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤–∫–ª—é—á–∞—î –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∏—Å–∫–∞ 0.909</div>
                `;
            }
            
            const resultElement = document.getElementById('result');
            resultElement.innerHTML = result;
            resultElement.style.display = 'block';
            
        } catch (error) {
            const resultElement = document.getElementById('result');
            resultElement.innerHTML = `<div class="error-message">–ü–æ–º–∏–ª–∫–∞: ${error.message}</div>`;
            resultElement.style.display = 'block';
        }
    }
    
    // –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–∏—Ö –ø–æ –∫–∞–º–µ—Ä–∞—Ö
    function parseCameraData() {
        const cameraInputs = document.querySelectorAll('.camera-input');
        let totalBitrate = 0;
        let totalCameras = 0;
        const details = [];
        
        cameraInputs.forEach(input => {
            const countInput = input.querySelector('.camera-count');
            const bitrateInput = input.querySelector('.camera-bitrate');
            
            const count = parseInt(countInput.value);
            const bitrate = parseInt(bitrateInput.value);
            
            if (count && bitrate) {
                totalCameras += count;
                totalBitrate += count * bitrate;
                details.push(`${count} –∫–∞–º–µ—Ä –∑ –±—ñ—Ç—Ä–µ–π—Ç–æ–º ${bitrate} Kbps`);
            }
        });
        
        return {
            totalBitrate: totalBitrate,
            totalCameras: totalCameras,
            details: details
        };
    }
});
